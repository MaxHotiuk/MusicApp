@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using MusicApp.Client.Interfaces
@using MusicApp.Shared.Models
@attribute [Authorize]
@inject ISpotifyClientService SpotifyService
@inject IAuthService AuthService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    @if (_isLoading)
    {
        <div class="d-flex justify-center align-center" style="height: 300px;">
            <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
        </div>
    }
    else if (_profile != null)
    {
        <MudPaper Elevation="3" Class="pa-6 mb-6" Style="background: linear-gradient(135deg, #1DB954 0%, #191414 100%);">
            <div class="d-flex align-center">
                @if (_profile.Images != null && _profile.Images.Count > 0)
                {
                    <MudAvatar Size="Size.Large" Style="height: 80px; width: 80px; border: 3px solid white;" Class="mr-4">
                        <MudImage Src="@_profile.Images[0].Url" Alt="Profile Image" />
                    </MudAvatar>
                }
                <div>
                    <MudText Typo="Typo.h4" Style="color: white; font-weight: 700;">@_profile.DisplayName</MudText>
                    <MudText Typo="Typo.body2" Style="color: white; opacity: 0.8;">Spotify Profile</MudText>
                </div>
            </div>
        </MudPaper>

        <MudGrid>
            <MudItem xs="12" md="6">
                <MudCard Class="h-100">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Account Details</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudList T="string">
                            <MudListItem>
                                <MudIcon>
                                    <MudIcon Icon="@Icons.Material.Filled.Person" />
                                </MudIcon>
                                <MudItem>
                                    <MudText Typo="Typo.body1">@_profile.DisplayName</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Display Name</MudText>
                                </MudItem>
                            </MudListItem>
                            <MudDivider />
                            <MudListItem>
                                <MudIcon>
                                    <MudIcon Icon="@Icons.Material.Filled.Email" />
                                </MudIcon>
                                <MudItem>
                                    <MudText Typo="Typo.body1">@_profile.Email</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Email</MudText>
                                </MudItem>
                            </MudListItem>
                            @if (!string.IsNullOrEmpty(_profile.Country))
                            {
                                <MudDivider />
                                <MudListItem>
                                    <MudIcon>
                                        <MudIcon Icon="@Icons.Material.Filled.LocationOn" />
                                    </MudIcon>
                                    <MudItem>
                                        <MudText Typo="Typo.body1">@_profile.Country</MudText>
                                        <MudText Typo="Typo.body2" Color="Color.Secondary">Country</MudText>
                                    </MudItem>
                                </MudListItem>
                            }
                        </MudList>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12" md="6">
                <MudCard Class="h-100">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Subscription</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <div class="d-flex align-center mb-4">
                            @if (_profile.Product?.ToLower() == "premium")
                            {
                                <MudAvatar Color="Color.Primary" Class="mr-3">
                                    <MudIcon Icon="@Icons.Material.Filled.Star" />
                                </MudAvatar>
                                <div>
                                    <MudText Typo="Typo.h6">Spotify Premium</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Full access to all features</MudText>
                                </div>
                            }
                            else
                            {
                                <MudAvatar Color="Color.Default" Class="mr-3">
                                    <MudIcon Icon="@Icons.Material.Filled.MusicNote" />
                                </MudAvatar>
                                <div>
                                    <MudText Typo="Typo.h6">Spotify Free</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Limited features with ads</MudText>
                                </div>
                            }
                        </div>
                        <MudButton Variant="Variant.Outlined" 
                                  Color="Color.Primary" 
                                  FullWidth="true"
                                  EndIcon="@Icons.Material.Filled.OpenInNew"
                                  OnClick="() => NavigationManager.NavigateTo(SpotifyAccountUrl, true)">
                            Manage Subscription
                        </MudButton>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        <div class="mt-6 text-center">
            <MudButton Variant="Variant.Text" 
                      Color="Color.Error"
                      StartIcon="@Icons.Material.Filled.Logout"
                      OnClick="Logout">
                Sign Out
            </MudButton>
        </div>
    }
    else
    {
        <MudPaper Elevation="2" Class="pa-6 text-center">
            <MudIcon Icon="@Icons.Material.Filled.Error" Size="Size.Large" Color="Color.Error" />
            <MudText Typo="Typo.h6" Class="mt-3">Failed to load profile information</MudText>
            <MudButton Variant="Variant.Outlined" 
                      Color="Color.Primary" 
                      Class="mt-3"
                      StartIcon="@Icons.Material.Filled.Refresh"
                      OnClick="ReloadProfile">
                Try Again
            </MudButton>
        </MudPaper>
    }
</MudContainer>

@code {
    private SpotifyUserProfile? _profile;
    private bool _isLoading = true;
    public string SpotifyAccountUrl => "https://www.spotify.com/account/overview/";
    
    protected override async Task OnInitializedAsync()
    {
        await LoadProfile();
    }

    private async Task LoadProfile()
    {
        try
        {
            _isLoading = true;
            _profile = await SpotifyService.GetUserProfileAsync();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading profile: {ex.Message}", Severity.Error);
            _profile = null;
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task ReloadProfile()
    {
        await LoadProfile();
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/");
    }
}